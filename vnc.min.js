import RFB from "./core/rfb.js";
let rfb, desktopName, start = !0;

function connectedToServer(e) {
    status("Connected to " + desktopName), "true" !== readQueryVariable("view_only") && (document.getElementById("copyButton").style.display = "block"), document.getElementById("infoText").style.display = "none"
}

function disconnectedFromServer(e) {
    e.detail.clean ? status("Disconnected") : status("Something went wrong, connection is closed :("), document.getElementById("copyButton").style.display = "none"
}

function credentialsAreRequired(e) {
    const t = prompt("Password Required:");
    rfb.sendCredentials({
        password: t
    })
}

function updateDesktopName(e) {
    desktopName = e.detail.name
}

function status(e) {
    document.getElementById("infoTextContent").value = e
}

function readQueryVariable(e) {
    const t = new RegExp(".*[?&]" + e + "=([^&#]*)"),
        n = document.location.href.match(t);
    return n ? decodeURIComponent(n[1]) : window.postData && window.postData[e] ? window.postData[e] : null
}

function writeToClipboard(e) {
    rfb.clipboardPasteFrom(e)
}

function clipboardReceived(e) {
    document.getElementById("clipboard").value = e.detail.text, navigator.clipboard.writeText(e.detail.text).then(() => {}).catch(e => {
        console.log("Something went wrong while copying to clipboard.", e)
    })
}
const host = readQueryVariable("host"),
    password = readQueryVariable("password");
host || (status("Host is required. Connection Failed."), start = !1), password || !0 !== start || (status("Password is required. Connection Failed."), start = !1), !0 === start && (status("Connecting to " + host.split("/")[2] + "..."), (rfb = new RFB(document.getElementById("screen"), "wss://" + host, {
    credentials: {
        password: password
    }
})).addEventListener("connect", connectedToServer), rfb.addEventListener("disconnect", disconnectedFromServer), rfb.addEventListener("credentialsrequired", credentialsAreRequired), rfb.addEventListener("desktopname", updateDesktopName), rfb.addEventListener("clipboard", clipboardReceived), window.addEventListener("focus", e => {
    navigator.clipboard.readText().then(e => {
        writeToClipboard(e)
    }).catch(e => {
        console.log("Something went wrong while accessing clipboard", e)
    })
}), rfb.viewOnly = readQueryVariable("view_only", !1), !0 === readQueryVariable("view_only") ? rfb.scaleViewport = !0 : rfb.resizeSession = !0, document.getElementById("clipboard").addEventListener("change", e => {
    writeToClipboard(document.getElementById("clipboard").value)
}));